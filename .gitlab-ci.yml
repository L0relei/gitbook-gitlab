stages:
  - test
  - build
  - deploy

# Open variables for S3
# AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY are protected variables
# added in the gitlab interface : Project | Settings | CI / CD | Variables
variables:
  AWS_DEFAULT_REGION: eu-west-3 # The region of our S3 bucket
  BUCKET_NAME: gitbook-gitab  # Your bucket name

# the 'lint' job will test the markdown syntax
gitbook:
  stage: test
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  script:
    - 'echo "node version: $(node -v)"'
    - gitbook -V
  allow_failure: true

# the 'lint' job will test the markdown syntax
lint:
  stage: test
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  script:
    - 'echo "node version: $(node -v)"'
    - markdownlint --config ./markdownlint.json ./*.md
  allow_failure: false

# the 'html' job will build your document in html format
html:
  stage: build
  dependencies:
    - gitbook
    - lint
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  script:
    - gitbook install # add any requested plugins in book.json
    - gitbook build . book # html build
  artifacts:
    paths:
      - book
    expire_in: 1 day
  only:
    - master # this job will affect only the 'master' branch the 'html' job will build your document in pdf format
# the 'pdf' job will build your document in pdf format
pdf:
  stage: build
  dependencies:
    - gitbook
    - lint
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  before_script:
    - mkdir ebooks
  script:
    - gitbook install # add any requested plugins in book.json
    - gitbook pdf . ebooks/${CI_PROJECT_NAME}.pdf # pdf build
  artifacts:
    paths:
      - ebooks/${CI_PROJECT_NAME}.pdf
    expire_in: 1 day
  only:
    - master # this job will affect only the 'master' branch the 'pdf' job will build your document in pdf format
# the 'epub' job will build your document in epub format
epub:
  stage: build
  dependencies:
    - gitbook
    - lint
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  before_script:
    - mkdir ebooks
  script:
    - gitbook install # add any requested plugins in book.json
    - gitbook epub . ebooks/${CI_PROJECT_NAME}.epub # epub build
  artifacts:
    paths:
      - ebooks/${CI_PROJECT_NAME}.epub
    expire_in: 1 day
  only:
    - master # this job will affect only the 'master' branch
# the 'mobi' job will build your document in mobi format
mobi:
  stage: build
  dependencies:
    - gitbook
    - lint
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  before_script:
    - mkdir ebooks
  script:
    - gitbook install # add any requested plugins in book.json
    - gitbook mobi . ebooks/${CI_PROJECT_NAME}.mobi # mobi build
  artifacts:
    paths:
      - ebooks/${CI_PROJECT_NAME}.mobi
    expire_in: 1 day
  only:
    - master # this job will affect only the 'master' branch

# the 'deploys3' job will deploy your site to your S3 bucket
deploys3:
  image: "python:latest"  # We use python because there is a well-working AWS Sdk
  stage: deploy
  dependencies:
    - html
    - pdf
    - mobi
    - epub # We want to specify dependencies in an explicit way, to avoid confusion if there are different build jobs
  before_script:
    - pip install awscli # Install the SDK
  script:
    - aws s3 rm s3://${BUCKET_NAME} --recursive
    - aws s3 cp book s3://${BUCKET_NAME} --recursive
    - aws s3 cp ebooks s3://${BUCKET_NAME}/ebooks --recursive
  environment:
    name: production
