stages:
  - build
  - deploy

# requiring the environment of NodeJS 10

variables:
  AWS_DEFAULT_REGION: us-east-1 # The region of our S3 bucket
  BUCKET_NAME: goffinet.pub         # Your bucket name

# the 'pdf' job will build your document in pdf format
pdf:
  stage: build
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  before_script:
    - 'echo "node version: $(node -v)"'
    - gitbook -V
    - gitbook install # add any requested plugins in book.json
  script:
    - gitbook pdf . ${CI_PROJECT_NAME}.pdf # pdf build
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}.pdf
    expire_in: 1 day
  only:
    - master # this job will affect only the 'master' branch the 'pdf' job will build your document in pdf format
# the 'epub' job will build your document in epub format
epub:
  stage: build
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  before_script:
    - 'echo "node version: $(node -v)"'
    - gitbook -V
    - gitbook install # add any requested plugins in book.json
  script:
    - gitbook epub . ${CI_PROJECT_NAME}.epub # epub build
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}.epub
    expire_in: 1 day
  only:
    - master # this job will affect only the 'master' branch
# the 'mobi' job will build your document in mobi format
mobi:
  stage: build
  image: registry.gitlab.com/goffinet/gitbook-gitlab:latest
  before_script:
    - 'echo "node version: $(node -v)"'
    - gitbook -V
    - gitbook install # add any requested plugins in book.json
  script:
    - gitbook mobi . ${CI_PROJECT_NAME}.mobi # mobi build
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}.mobi
    expire_in: 1 day
  only:
    - master # this job will affect only the 'master' branch

deploys3:
  image: "python:latest"  # We use python because there is a well-working AWS Sdk
  stage: deploy
  dependencies:
    - buildJekyll      # We want to specify dependencies in an explicit way, to avoid confusion if there are different build jobs
  before_script:
    - pip install awscli # Install the SDK
  script:
    - aws s3 cp _site s3://${BUCKET_NAME}/${CI_COMMIT_REF_SLUG} --recursive # Replace example-bucket with your bucket
  environment:
    name: ${CI_COMMIT_REF_SLUG}
    url: http://${BUCKET_NAME}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com/${CI_COMMIT_REF_SLUG}  # This is the url of the bucket we saved before
    on_stop: clean_s3 # When the branch is merged, we clean up after ourself
